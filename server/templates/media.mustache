<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        * {
            box-sizing: border-box;
        }

        textarea, input[name="slug"], input[name="import_url"] {
            width: 100%;
            font-size: 1em;
            font-family: "SF Mono", "Menlo-Regular", Consolas, "Andale Mono WT",
            "Andale Mono", "Lucida Console", "Lucida Sans Typewriter",
            "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono",
            "Nimbus Mono L", Monaco, "Courier New", Courier, monospace;
        }

        textarea {
            min-height: 40vh;
        }

        iframe {
            width: 100%;
            min-height: 40vh;
            border: 1px solid gray;
        }

        form, form button {
            font-size: 1em;
            font-family: "SF Mono", "Menlo-Regular", Consolas, "Andale Mono WT",
            "Andale Mono", "Lucida Console", "Lucida Sans Typewriter",
            "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono",
            "Nimbus Mono L", Monaco, "Courier New", Courier, monospace;
        }
        
        section {
            display: flex;
            flex-wrap: wrap;
            width: 100%;
        }
        
        section > div {
            width: 64px;
            height: 64px;
            background: gray;
            word-break: all;
            margin: 2px;
        }
    </style>
</head>
<body>
    <a href="/backstage">&lt; backstage</a>
    <section>
      {{#media}}
        <div
          {{#type.image}}
            style="background-image: url('/media/{{id}}.{{ext}}')"
          {{/type.image}}
        >
            {{ext}}
        </div>
      {{/media}}
      {{#moreMedia}}
        <div onclick="window.loadMore(this)">
           ...
        </div>
      {{/moreMedia}}
    </section>
    <script>
    window.loadMore = function (el) {
            const parent = el.parentNode
            parent.removeChild(el)
            fetch(`/backstage/media/?offset=${document.querySelectorAll("section > div").length}`)
            .then(async r => {
              const htmlTag = document.createElement('html')
              htmlTag.innerHTML = await r.text()
              for (const div of htmlTag.querySelectorAll("section > *")) {
                parent.appendChild(div)
              }
            })
            .catch(e => {
            
            parent.innerText = e.toString()})
    }
    </script>
</body>
</html>
